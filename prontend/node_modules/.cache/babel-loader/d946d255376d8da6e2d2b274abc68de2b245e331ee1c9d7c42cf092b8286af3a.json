{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jenny\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\moodify\\\\moodify\\\\prontend\\\\src\\\\HomeComponent.js\",\n  _s = $RefreshSig$();\n// HomeComponent.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useUser } from './UserContext';\nimport CalendarModal from './CalendarModal';\nimport EmojiModal from './EmojiModal';\nimport DiaryModal from './DiaryModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomeComponent = () => {\n  _s();\n  const {\n    user,\n    addDiaryEntry,\n    updateUser\n  } = useUser();\n  const [selectedEmoji, setSelectedEmoji] = useState(null);\n  const [entries, setEntries] = useState(JSON.parse(localStorage.getItem('emojiCalendar')) || {});\n  useEffect(() => {\n    // 로컬 스토리지에 저장된 데이터를 불러오는 로직\n    const storedData = JSON.parse(localStorage.getItem('emojiCalendar')) || {};\n    setEntries(storedData);\n  }, []);\n  const handleEmojiSelect = emoji => {\n    setSelectedEmoji(emoji);\n  };\n  const handleDiarySave = (selectedDate, diaryEntry) => {\n    const newEntries = {\n      ...entries,\n      [selectedDate]: {\n        emoji: selectedEmoji,\n        diary: diaryEntry\n      }\n    };\n    setEntries(newEntries);\n    localStorage.setItem('emojiCalendar', JSON.stringify(newEntries));\n    setSelectedEmoji(null);\n  };\n\n  // 기존의 handleYearMonthSelect, updateUserCalendarData, handleAddDiary 등의 함수는 그대로 유지\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: selectedEmoji ? /*#__PURE__*/_jsxDEV(DiaryModal, {\n      onDiarySave: handleDiarySave,\n      selectedEmoji: selectedEmoji\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(EmojiModal, {\n      onEmojiSelect: handleEmojiSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(HomeComponent, \"sOvcD29FmdUq1iJqF5oFTDJvFSI=\", false, function () {\n  return [useUser];\n});\n_c = HomeComponent;\nexport default HomeComponent;\nvar _c;\n$RefreshReg$(_c, \"HomeComponent\");","map":{"version":3,"names":["React","useState","useEffect","useUser","CalendarModal","EmojiModal","DiaryModal","jsxDEV","_jsxDEV","HomeComponent","_s","user","addDiaryEntry","updateUser","selectedEmoji","setSelectedEmoji","entries","setEntries","JSON","parse","localStorage","getItem","storedData","handleEmojiSelect","emoji","handleDiarySave","selectedDate","diaryEntry","newEntries","diary","setItem","stringify","children","onDiarySave","fileName","_jsxFileName","lineNumber","columnNumber","onEmojiSelect","_c","$RefreshReg$"],"sources":["C:/Users/jenny/OneDrive/바탕 화면/moodify/moodify/prontend/src/HomeComponent.js"],"sourcesContent":["// HomeComponent.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useUser } from './UserContext';\r\nimport CalendarModal from './CalendarModal';\r\nimport EmojiModal from './EmojiModal';\r\nimport DiaryModal from './DiaryModal';\r\n\r\nconst HomeComponent = () => {\r\n  const { user, addDiaryEntry, updateUser } = useUser();\r\n  const [selectedEmoji, setSelectedEmoji] = useState(null);\r\n  const [entries, setEntries] = useState(\r\n    JSON.parse(localStorage.getItem('emojiCalendar')) || {}\r\n  );\r\n\r\n  useEffect(() => {\r\n    // 로컬 스토리지에 저장된 데이터를 불러오는 로직\r\n    const storedData = JSON.parse(localStorage.getItem('emojiCalendar')) || {};\r\n    setEntries(storedData);\r\n  }, []);\r\n\r\n  const handleEmojiSelect = (emoji) => {\r\n    setSelectedEmoji(emoji);\r\n  };\r\n\r\n  const handleDiarySave = (selectedDate, diaryEntry) => {\r\n    const newEntries = {\r\n      ...entries,\r\n      [selectedDate]: { emoji: selectedEmoji, diary: diaryEntry }\r\n    };\r\n    setEntries(newEntries);\r\n    localStorage.setItem('emojiCalendar', JSON.stringify(newEntries));\r\n    setSelectedEmoji(null);\r\n  };\r\n\r\n  // 기존의 handleYearMonthSelect, updateUserCalendarData, handleAddDiary 등의 함수는 그대로 유지\r\n\r\n  return (\r\n    <div>\r\n      {/* 이모티콘이 선택되었을 경우 일기 작성 모달 표시, 그렇지 않을 경우 이모티콘 선택 모달 표시 */}\r\n      {selectedEmoji ? (\r\n        <DiaryModal onDiarySave={handleDiarySave} selectedEmoji={selectedEmoji} />\r\n      ) : (\r\n        <EmojiModal onEmojiSelect={handleEmojiSelect} />\r\n      )}\r\n\r\n      {/* 기존의 렌더링 로직은 그대로 유지 */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeComponent;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,eAAe;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC,IAAI;IAAEC,aAAa;IAAEC;EAAW,CAAC,GAAGV,OAAO,CAAC,CAAC;EACrD,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CACpCiB,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,CACxD,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACd;IACA,MAAMoB,UAAU,GAAGJ,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,CAAC;IAC1EJ,UAAU,CAACK,UAAU,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACnCT,gBAAgB,CAACS,KAAK,CAAC;EACzB,CAAC;EAED,MAAMC,eAAe,GAAGA,CAACC,YAAY,EAAEC,UAAU,KAAK;IACpD,MAAMC,UAAU,GAAG;MACjB,GAAGZ,OAAO;MACV,CAACU,YAAY,GAAG;QAAEF,KAAK,EAAEV,aAAa;QAAEe,KAAK,EAAEF;MAAW;IAC5D,CAAC;IACDV,UAAU,CAACW,UAAU,CAAC;IACtBR,YAAY,CAACU,OAAO,CAAC,eAAe,EAAEZ,IAAI,CAACa,SAAS,CAACH,UAAU,CAAC,CAAC;IACjEb,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;;EAED;;EAEA,oBACEP,OAAA;IAAAwB,QAAA,EAEGlB,aAAa,gBACZN,OAAA,CAACF,UAAU;MAAC2B,WAAW,EAAER,eAAgB;MAACX,aAAa,EAAEA;IAAc;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE1E7B,OAAA,CAACH,UAAU;MAACiC,aAAa,EAAEf;IAAkB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAChD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGE,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAzCID,aAAa;EAAA,QAC2BN,OAAO;AAAA;AAAAoC,EAAA,GAD/C9B,aAAa;AA2CnB,eAAeA,aAAa;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}