{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jenny\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\moodify\\\\moodify\\\\prontend\\\\src\\\\FriendCalendarPage.js\",\n  _s = $RefreshSig$();\n// FriendCalendarPage.js\n\n/*import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom'; // useParams, useNavigate import\r\nimport axios from 'axios';\r\nimport FriendDiaryList from './FriendDiaryList';\r\nimport CalendarModal from './CalendarModal'; // CalendarModal import\r\n\r\nconst FriendCalendarPage = () => {\r\n  const { friendId } = useParams();\r\n  const [diaries, setDiaries] = useState([]);\r\n  const [selectedYearMonth, setSelectedYearMonth] = useState('2024-02');\r\n  const [calendarModalShown, setCalendarModalShown] = useState(false);\r\n  const navigate = useNavigate(); // useNavigate hook\r\n\r\n  useEffect(() => {\r\n    const fetchDiaries = async () => {\r\n      const response = await axios.get(`/api/diaries/${friendId}/${selectedYearMonth}`);\r\n      setDiaries(response.data);\r\n    };\r\n\r\n    fetchDiaries();\r\n  }, [friendId, selectedYearMonth]);\r\n\r\n  const handleSelectDate = (year, month) => {\r\n    setSelectedYearMonth(`${year}-${month}`);\r\n    setCalendarModalShown(false);\r\n    navigate(`/friend-calendar/${friendId}/${year}-${month}`);\r\n  };\r\n\r\n  const handleLike = (diaryId) => {\r\n    // 좋아요 처리 로직\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{selectedYearMonth}</h2>\r\n      <button onClick={() => setCalendarModalShown(!calendarModalShown)} className=\"button-select-year\">Select Year and Month</button>\r\n      {calendarModalShown && (\r\n        <CalendarModal\r\n          onSelect={handleSelectDate}\r\n          onClose={() => setCalendarModalShown(false)}\r\n        />\r\n      )}\r\n      <FriendDiaryList diaries={diaries} onLike={handleLike} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FriendCalendarPage;*/\n\n// FriendCalendarPage.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom'; // useParams, useNavigate import\n// import axios from 'axios'; \nimport FriendDiaryList from './FriendDiaryList';\nimport CalendarModal from './CalendarModal'; // CalendarModal import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FriendCalendarPage = () => {\n  _s();\n  const {\n    friendId\n  } = useParams();\n  const [diaries, setDiaries] = useState([]);\n  const [selectedYearMonth, setSelectedYearMonth] = useState('2024-02');\n  const [calendarModalShown, setCalendarModalShown] = useState(false);\n  const [likes, setLikes] = useState({});\n  const navigate = useNavigate(); // useNavigate hook\n\n  useEffect(() => {\n    const fetchDiaries = async () => {\n      // const response = await axios.get(`/api/diaries/${friendId}/${selectedYearMonth}`);\n      // setDiaries(response.data);\n      setDiaries([{\n        id: 1,\n        content: 'Happy Valentine\\'s Day!',\n        emoji: '😊',\n        date: '2024-02-14'\n      }, {\n        id: 2,\n        content: 'Diary 2',\n        emoji: '😔',\n        date: '2024-03-03'\n      }\n      // ... \n      ]);\n    };\n    fetchDiaries();\n  }, [friendId, selectedYearMonth]);\n  const handleSelectDate = (year, month) => {\n    setSelectedYearMonth(`${year}-${month}`);\n    setCalendarModalShown(false);\n    navigate(`/friend-calendar/${friendId}/${year}-${month}`);\n  };\n  const handleLike = diaryId => {\n    // 좋아요 상태를 업데이트\n    setLikes(prev => ({\n      ...prev,\n      [diaryId]: !prev[diaryId]\n    }));\n  };\n  const handleDiaryClick = diaryId => {\n    navigate(`/friend-diary/${diaryId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: selectedYearMonth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCalendarModalShown(!calendarModalShown),\n      className: \"button-select-year\",\n      children: \"Select Year and Month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), calendarModalShown && /*#__PURE__*/_jsxDEV(CalendarModal, {\n      onSelect: handleSelectDate,\n      onClose: () => setCalendarModalShown(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), diaries.map(diary => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => handleDiaryClick(diary.id),\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: diary.emoji\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          e.stopPropagation();\n          handleLike(diary.id);\n        },\n        children: [\" \", likes[diary.id] ? 'Unlike' : 'Like']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this)]\n    }, diary.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(FriendCalendarPage, \"OpIsSNwoBolfGwzwHMPUjJbRKi0=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = FriendCalendarPage;\nexport default FriendCalendarPage;\nvar _c;\n$RefreshReg$(_c, \"FriendCalendarPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","FriendDiaryList","CalendarModal","jsxDEV","_jsxDEV","FriendCalendarPage","_s","friendId","diaries","setDiaries","selectedYearMonth","setSelectedYearMonth","calendarModalShown","setCalendarModalShown","likes","setLikes","navigate","fetchDiaries","id","content","emoji","date","handleSelectDate","year","month","handleLike","diaryId","prev","handleDiaryClick","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","onSelect","onClose","map","diary","e","stopPropagation","_c","$RefreshReg$"],"sources":["C:/Users/jenny/OneDrive/바탕 화면/moodify/moodify/prontend/src/FriendCalendarPage.js"],"sourcesContent":["// FriendCalendarPage.js\r\n\r\n/*import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom'; // useParams, useNavigate import\r\nimport axios from 'axios';\r\nimport FriendDiaryList from './FriendDiaryList';\r\nimport CalendarModal from './CalendarModal'; // CalendarModal import\r\n\r\nconst FriendCalendarPage = () => {\r\n  const { friendId } = useParams();\r\n  const [diaries, setDiaries] = useState([]);\r\n  const [selectedYearMonth, setSelectedYearMonth] = useState('2024-02');\r\n  const [calendarModalShown, setCalendarModalShown] = useState(false);\r\n  const navigate = useNavigate(); // useNavigate hook\r\n\r\n  useEffect(() => {\r\n    const fetchDiaries = async () => {\r\n      const response = await axios.get(`/api/diaries/${friendId}/${selectedYearMonth}`);\r\n      setDiaries(response.data);\r\n    };\r\n\r\n    fetchDiaries();\r\n  }, [friendId, selectedYearMonth]);\r\n\r\n  const handleSelectDate = (year, month) => {\r\n    setSelectedYearMonth(`${year}-${month}`);\r\n    setCalendarModalShown(false);\r\n    navigate(`/friend-calendar/${friendId}/${year}-${month}`);\r\n  };\r\n\r\n  const handleLike = (diaryId) => {\r\n    // 좋아요 처리 로직\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{selectedYearMonth}</h2>\r\n      <button onClick={() => setCalendarModalShown(!calendarModalShown)} className=\"button-select-year\">Select Year and Month</button>\r\n      {calendarModalShown && (\r\n        <CalendarModal\r\n          onSelect={handleSelectDate}\r\n          onClose={() => setCalendarModalShown(false)}\r\n        />\r\n      )}\r\n      <FriendDiaryList diaries={diaries} onLike={handleLike} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FriendCalendarPage;*/\r\n\r\n// FriendCalendarPage.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom'; // useParams, useNavigate import\r\n// import axios from 'axios'; \r\nimport FriendDiaryList from './FriendDiaryList';\r\nimport CalendarModal from './CalendarModal'; // CalendarModal import\r\n\r\nconst FriendCalendarPage = () => {\r\n  const { friendId } = useParams();\r\n  const [diaries, setDiaries] = useState([]);\r\n  const [selectedYearMonth, setSelectedYearMonth] = useState('2024-02');\r\n  const [calendarModalShown, setCalendarModalShown] = useState(false);\r\n  const [likes, setLikes] = useState({});\r\n  const navigate = useNavigate(); // useNavigate hook\r\n\r\n  useEffect(() => {\r\n    const fetchDiaries = async () => {\r\n      // const response = await axios.get(`/api/diaries/${friendId}/${selectedYearMonth}`);\r\n      // setDiaries(response.data);\r\n      setDiaries([ \r\n        { id: 1, content: 'Happy Valentine\\'s Day!', emoji: '😊', date: '2024-02-14' },\r\n        { id: 2, content: 'Diary 2', emoji: '😔', date: '2024-03-03'},\r\n        // ... \r\n      ]);\r\n    };\r\n\r\n    fetchDiaries();\r\n  }, [friendId, selectedYearMonth]);\r\n\r\n  const handleSelectDate = (year, month) => {\r\n    setSelectedYearMonth(`${year}-${month}`);\r\n    setCalendarModalShown(false);\r\n    navigate(`/friend-calendar/${friendId}/${year}-${month}`);\r\n  };\r\n\r\n  const handleLike = (diaryId) => {\r\n    // 좋아요 상태를 업데이트\r\n    setLikes(prev => ({\r\n      ...prev,\r\n      [diaryId]: !prev[diaryId]\r\n    }));\r\n  };\r\n\r\n  const handleDiaryClick = (diaryId) => {\r\n    navigate(`/friend-diary/${diaryId}`);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>{selectedYearMonth}</h2>\r\n      <button onClick={() => setCalendarModalShown(!calendarModalShown)} className=\"button-select-year\">Select Year and Month</button>\r\n      {calendarModalShown && (\r\n        <CalendarModal\r\n          onSelect={handleSelectDate}\r\n          onClose={() => setCalendarModalShown(false)}\r\n        />\r\n      )}\r\n      {\r\n        diaries.map(diary => (\r\n          <div key={diary.id} onClick={() => handleDiaryClick(diary.id)}> {/* 이모지 클릭 시 해당 일기 페이지로 이동 */}\r\n            <span>{diary.emoji}</span> {/* 이모지 표시 */}\r\n            <button onClick={(e) => { e.stopPropagation(); handleLike(diary.id); }}> {/* 좋아요 버튼 클릭 이벤트 수정 */}\r\n              {likes[diary.id] ? 'Unlike' : 'Like'}\r\n            </button>\r\n          </div>\r\n        ))\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FriendCalendarPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}