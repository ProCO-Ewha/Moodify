{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jenny\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\moodify\\\\moodify\\\\prontend\\\\src\\\\FriendCalendarPage.js\",\n  _s = $RefreshSig$();\n// FriendCalendarPage.js\n\n/*import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom'; // useParams, useNavigate import\r\nimport axios from 'axios';\r\nimport FriendDiaryList from './FriendDiaryList';\r\nimport CalendarModal from './CalendarModal'; // CalendarModal import\r\n\r\nconst FriendCalendarPage = () => {\r\n  const { friendId } = useParams();\r\n  const [diaries, setDiaries] = useState([]);\r\n  const [selectedYearMonth, setSelectedYearMonth] = useState('2024-02');\r\n  const [calendarModalShown, setCalendarModalShown] = useState(false);\r\n  const navigate = useNavigate(); // useNavigate hook\r\n\r\n  useEffect(() => {\r\n    const fetchDiaries = async () => {\r\n      const response = await axios.get(`/api/diaries/${friendId}/${selectedYearMonth}`);\r\n      setDiaries(response.data);\r\n    };\r\n\r\n    fetchDiaries();\r\n  }, [friendId, selectedYearMonth]);\r\n\r\n  const handleSelectDate = (year, month) => {\r\n    setSelectedYearMonth(`${year}-${month}`);\r\n    setCalendarModalShown(false);\r\n    navigate(`/friend-calendar/${friendId}/${year}-${month}`);\r\n  };\r\n\r\n  const handleLike = (diaryId) => {\r\n    // 좋아요 처리 로직\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{selectedYearMonth}</h2>\r\n      <button onClick={() => setCalendarModalShown(!calendarModalShown)} className=\"button-select-year\">Select Year and Month</button>\r\n      {calendarModalShown && (\r\n        <CalendarModal\r\n          onSelect={handleSelectDate}\r\n          onClose={() => setCalendarModalShown(false)}\r\n        />\r\n      )}\r\n      <FriendDiaryList diaries={diaries} onLike={handleLike} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FriendCalendarPage;*/\n\n// FriendCalendarPage.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport CalendarModal from './CalendarModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FriendCalendarPage = () => {\n  _s();\n  const {\n    friendId\n  } = useParams();\n  const [diaries, setDiaries] = useState([]);\n  const [selectedYearMonth, setSelectedYearMonth] = useState('2024-02');\n  const [calendarModalShown, setCalendarModalShown] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchDiaries = async () => {\n      // const response = await axios.get(`/api/diaries/${friendId}/${selectedYearMonth}`);\n      // const sortedDiaries = response.data.sort((a, b) => new Date(b.date) - new Date(a.date));\n      //setDiaries(sortedDiaries);\n      const mockDiaries = [{\n        id: 1,\n        content: 'Happy Valentine\\'s Day!',\n        emoji: '😊',\n        date: '2024-02-14'\n      }, {\n        id: 2,\n        content: 'Diary 2',\n        emoji: '😔',\n        date: '2024-03-03'\n      }\n      // ... \n      ];\n      const sortedDiaries = mockDiaries.sort((a, b) => new Date(b.date) - new Date(a.date));\n      setDiaries(sortedDiaries);\n    };\n    fetchDiaries();\n  }, [friendId, selectedYearMonth]);\n  const handleSelectDate = (year, month) => {\n    setSelectedYearMonth(`${year}-${month}`);\n    setCalendarModalShown(false);\n    navigate(`/friend-calendar/${friendId}/${year}-${month}`);\n  };\n  const handleDiaryClick = diaryId => {\n    navigate(`/friend-diary/${diaryId}`);\n  };\n\n  /*return (\r\n    <div>\r\n      <button onClick={() => setCalendarModalShown(!calendarModalShown)} className=\"button-select-year\">Select Year and Month</button>\r\n      <h2 style={{ marginTop: '20px' }}>{selectedYearMonth}</h2>\r\n      {calendarModalShown && (\r\n        <CalendarModal\r\n          onSelect={handleSelectDate}\r\n          onClose={() => setCalendarModalShown(false)}\r\n        />\r\n      )}\r\n      <div style={{ display: 'grid', gridTemplateColumns: 'repeat(5, 1fr)' }}>\r\n        {diaries.map((entry, index) => (\r\n          <div key={index} onClick={() => handleDiaryClick(entry.id)}>\r\n            {entry?.emoji}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCalendarModalShown(!calendarModalShown),\n      className: \"button-select-year\",\n      children: \"Select Year and Month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(5, 1fr)'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"diary-container\",\n        children: diaries.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleDiaryClick(entry.id),\n          children: entry === null || entry === void 0 ? void 0 : entry.emoji\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 5\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }, this), calendarModalShown && /*#__PURE__*/_jsxDEV(CalendarModal, {\n      onSelect: handleSelectDate,\n      onClose: () => setCalendarModalShown(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: selectedYearMonth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 3\n  }, this);\n};\n_s(FriendCalendarPage, \"gE3Igt2DI20YQg9wCP8Mqmx/1sA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = FriendCalendarPage;\nexport default FriendCalendarPage;\nvar _c;\n$RefreshReg$(_c, \"FriendCalendarPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","CalendarModal","jsxDEV","_jsxDEV","FriendCalendarPage","_s","friendId","diaries","setDiaries","selectedYearMonth","setSelectedYearMonth","calendarModalShown","setCalendarModalShown","navigate","fetchDiaries","mockDiaries","id","content","emoji","date","sortedDiaries","sort","a","b","Date","handleSelectDate","year","month","handleDiaryClick","diaryId","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gridTemplateColumns","map","entry","index","onSelect","onClose","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/jenny/OneDrive/바탕 화면/moodify/moodify/prontend/src/FriendCalendarPage.js"],"sourcesContent":["// FriendCalendarPage.js\r\n\r\n/*import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom'; // useParams, useNavigate import\r\nimport axios from 'axios';\r\nimport FriendDiaryList from './FriendDiaryList';\r\nimport CalendarModal from './CalendarModal'; // CalendarModal import\r\n\r\nconst FriendCalendarPage = () => {\r\n  const { friendId } = useParams();\r\n  const [diaries, setDiaries] = useState([]);\r\n  const [selectedYearMonth, setSelectedYearMonth] = useState('2024-02');\r\n  const [calendarModalShown, setCalendarModalShown] = useState(false);\r\n  const navigate = useNavigate(); // useNavigate hook\r\n\r\n  useEffect(() => {\r\n    const fetchDiaries = async () => {\r\n      const response = await axios.get(`/api/diaries/${friendId}/${selectedYearMonth}`);\r\n      setDiaries(response.data);\r\n    };\r\n\r\n    fetchDiaries();\r\n  }, [friendId, selectedYearMonth]);\r\n\r\n  const handleSelectDate = (year, month) => {\r\n    setSelectedYearMonth(`${year}-${month}`);\r\n    setCalendarModalShown(false);\r\n    navigate(`/friend-calendar/${friendId}/${year}-${month}`);\r\n  };\r\n\r\n  const handleLike = (diaryId) => {\r\n    // 좋아요 처리 로직\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{selectedYearMonth}</h2>\r\n      <button onClick={() => setCalendarModalShown(!calendarModalShown)} className=\"button-select-year\">Select Year and Month</button>\r\n      {calendarModalShown && (\r\n        <CalendarModal\r\n          onSelect={handleSelectDate}\r\n          onClose={() => setCalendarModalShown(false)}\r\n        />\r\n      )}\r\n      <FriendDiaryList diaries={diaries} onLike={handleLike} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FriendCalendarPage;*/\r\n\r\n// FriendCalendarPage.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport CalendarModal from './CalendarModal';\r\n\r\nconst FriendCalendarPage = () => {\r\n  const { friendId } = useParams();\r\n  const [diaries, setDiaries] = useState([]);\r\n  const [selectedYearMonth, setSelectedYearMonth] = useState('2024-02');\r\n  const [calendarModalShown, setCalendarModalShown] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchDiaries = async () => {\r\n      // const response = await axios.get(`/api/diaries/${friendId}/${selectedYearMonth}`);\r\n      // const sortedDiaries = response.data.sort((a, b) => new Date(b.date) - new Date(a.date));\r\n      //setDiaries(sortedDiaries);\r\n      const mockDiaries = [\r\n        { id: 1, content: 'Happy Valentine\\'s Day!', emoji: '😊', date: '2024-02-14' },\r\n        { id: 2, content: 'Diary 2', emoji: '😔', date: '2024-03-03'},\r\n        // ... \r\n      ];\r\n      const sortedDiaries = mockDiaries.sort((a, b) => new Date(b.date) - new Date(a.date));\r\n      setDiaries(sortedDiaries);\r\n    };\r\n\r\n    fetchDiaries();\r\n  }, [friendId, selectedYearMonth]);\r\n\r\n  const handleSelectDate = (year, month) => {\r\n    setSelectedYearMonth(`${year}-${month}`);\r\n    setCalendarModalShown(false);\r\n    navigate(`/friend-calendar/${friendId}/${year}-${month}`);\r\n  };\r\n\r\n  const handleDiaryClick = (diaryId) => {\r\n    navigate(`/friend-diary/${diaryId}`);\r\n  };\r\n\r\n/*return (\r\n  <div>\r\n    <button onClick={() => setCalendarModalShown(!calendarModalShown)} className=\"button-select-year\">Select Year and Month</button>\r\n    <h2 style={{ marginTop: '20px' }}>{selectedYearMonth}</h2>\r\n    {calendarModalShown && (\r\n      <CalendarModal\r\n        onSelect={handleSelectDate}\r\n        onClose={() => setCalendarModalShown(false)}\r\n      />\r\n    )}\r\n    <div style={{ display: 'grid', gridTemplateColumns: 'repeat(5, 1fr)' }}>\r\n      {diaries.map((entry, index) => (\r\n        <div key={index} onClick={() => handleDiaryClick(entry.id)}>\r\n          {entry?.emoji}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </div>\r\n);*/\r\n\r\nreturn (\r\n  <div>\r\n    <button onClick={() => setCalendarModalShown(!calendarModalShown)} className=\"button-select-year\">Select Year and Month</button>\r\n    <div style={{ display: 'grid', gridTemplateColumns: 'repeat(5, 1fr)' }}>\r\n    <div className=\"diary-container\">\r\n  {diaries.map((entry, index) => (\r\n    <div key={index} onClick={() => handleDiaryClick(entry.id)}>\r\n      {entry?.emoji}\r\n    </div>\r\n  ))}\r\n</div>\r\n\r\n    </div>\r\n    {calendarModalShown && (\r\n      <CalendarModal\r\n        onSelect={handleSelectDate}\r\n        onClose={() => setCalendarModalShown(false)}\r\n      />\r\n    )}\r\n    <h2 style={{ marginTop: '20px' }}>{selectedYearMonth}</h2>\r\n  </div>\r\n);\r\n      }\r\n\r\nexport default FriendCalendarPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}