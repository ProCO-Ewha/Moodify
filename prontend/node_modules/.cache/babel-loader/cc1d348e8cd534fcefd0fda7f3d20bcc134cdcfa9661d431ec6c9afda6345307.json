{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jenny\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\moodify\\\\moodify\\\\prontend\\\\src\\\\FriendCalendarPage.js\",\n  _s = $RefreshSig$();\n// FriendCalendarPage.js\n\n/*import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom'; // useParams, useNavigate import\r\nimport axios from 'axios';\r\nimport FriendDiaryList from './FriendDiaryList';\r\nimport CalendarModal from './CalendarModal'; // CalendarModal import\r\n\r\nconst FriendCalendarPage = () => {\r\n  const { friendId } = useParams();\r\n  const [diaries, setDiaries] = useState([]);\r\n  const [selectedYearMonth, setSelectedYearMonth] = useState('2024-02');\r\n  const [calendarModalShown, setCalendarModalShown] = useState(false);\r\n  const navigate = useNavigate(); // useNavigate hook\r\n\r\n  useEffect(() => {\r\n    const fetchDiaries = async () => {\r\n      const response = await axios.get(`/api/diaries/${friendId}/${selectedYearMonth}`);\r\n      setDiaries(response.data);\r\n    };\r\n\r\n    fetchDiaries();\r\n  }, [friendId, selectedYearMonth]);\r\n\r\n  const handleSelectDate = (year, month) => {\r\n    setSelectedYearMonth(`${year}-${month}`);\r\n    setCalendarModalShown(false);\r\n    navigate(`/friend-calendar/${friendId}/${year}-${month}`);\r\n  };\r\n\r\n  const handleLike = (diaryId) => {\r\n    // Ï¢ãÏïÑÏöî Ï≤òÎ¶¨ Î°úÏßÅ\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{selectedYearMonth}</h2>\r\n      <button onClick={() => setCalendarModalShown(!calendarModalShown)} className=\"button-select-year\">Select Year and Month</button>\r\n      {calendarModalShown && (\r\n        <CalendarModal\r\n          onSelect={handleSelectDate}\r\n          onClose={() => setCalendarModalShown(false)}\r\n        />\r\n      )}\r\n      <FriendDiaryList diaries={diaries} onLike={handleLike} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FriendCalendarPage;*/\n\n// FriendCalendarPage.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom'; // useParams, useNavigate import\n// import axios from 'axios'; \nimport FriendDiaryList from './FriendDiaryList';\nimport CalendarModal from './CalendarModal'; // CalendarModal import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FriendCalendarPage = () => {\n  _s();\n  const {\n    friendId\n  } = useParams();\n  const [diaries, setDiaries] = useState([]);\n  const [selectedYearMonth, setSelectedYearMonth] = useState('2024-02');\n  const [calendarModalShown, setCalendarModalShown] = useState(false);\n  const [likes, setLikes] = useState({});\n  const navigate = useNavigate(); // useNavigate hook\n\n  useEffect(() => {\n    const fetchDiaries = async () => {\n      // const response = await axios.get(`/api/diaries/${friendId}/${selectedYearMonth}`);\n      // setDiaries(response.data);\n      setDiaries([{\n        id: 1,\n        content: 'Diary 1',\n        emoji: 'üòî'\n      }, {\n        id: 2,\n        content: 'Diary 2',\n        emoji: 'üòî'\n      }\n      // ... \n      ]);\n    };\n    fetchDiaries();\n  }, [friendId, selectedYearMonth]);\n  const handleSelectDate = (year, month) => {\n    setSelectedYearMonth(`${year}-${month}`);\n    setCalendarModalShown(false);\n    navigate(`/friend-calendar/${friendId}/${year}-${month}`);\n  };\n  const handleLike = diaryId => {\n    // Ï¢ãÏïÑÏöî ÏÉÅÌÉúÎ•º ÏóÖÎç∞Ïù¥Ìä∏\n    setLikes(prev => ({\n      ...prev,\n      [diaryId]: !prev[diaryId]\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: selectedYearMonth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCalendarModalShown(!calendarModalShown),\n      className: \"button-select-year\",\n      children: \"Select Year and Month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), calendarModalShown && /*#__PURE__*/_jsxDEV(CalendarModal, {\n      onSelect: handleSelectDate,\n      onClose: () => setCalendarModalShown(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FriendDiaryList, {\n      diaries: diaries,\n      onLike: handleLike,\n      likes: likes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(FriendCalendarPage, \"OpIsSNwoBolfGwzwHMPUjJbRKi0=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = FriendCalendarPage;\nexport default FriendCalendarPage;\nvar _c;\n$RefreshReg$(_c, \"FriendCalendarPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","FriendDiaryList","CalendarModal","jsxDEV","_jsxDEV","FriendCalendarPage","_s","friendId","diaries","setDiaries","selectedYearMonth","setSelectedYearMonth","calendarModalShown","setCalendarModalShown","likes","setLikes","navigate","fetchDiaries","id","content","emoji","handleSelectDate","year","month","handleLike","diaryId","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","onSelect","onClose","onLike","_c","$RefreshReg$"],"sources":["C:/Users/jenny/OneDrive/Î∞îÌÉï ÌôîÎ©¥/moodify/moodify/prontend/src/FriendCalendarPage.js"],"sourcesContent":["// FriendCalendarPage.js\r\n\r\n/*import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom'; // useParams, useNavigate import\r\nimport axios from 'axios';\r\nimport FriendDiaryList from './FriendDiaryList';\r\nimport CalendarModal from './CalendarModal'; // CalendarModal import\r\n\r\nconst FriendCalendarPage = () => {\r\n  const { friendId } = useParams();\r\n  const [diaries, setDiaries] = useState([]);\r\n  const [selectedYearMonth, setSelectedYearMonth] = useState('2024-02');\r\n  const [calendarModalShown, setCalendarModalShown] = useState(false);\r\n  const navigate = useNavigate(); // useNavigate hook\r\n\r\n  useEffect(() => {\r\n    const fetchDiaries = async () => {\r\n      const response = await axios.get(`/api/diaries/${friendId}/${selectedYearMonth}`);\r\n      setDiaries(response.data);\r\n    };\r\n\r\n    fetchDiaries();\r\n  }, [friendId, selectedYearMonth]);\r\n\r\n  const handleSelectDate = (year, month) => {\r\n    setSelectedYearMonth(`${year}-${month}`);\r\n    setCalendarModalShown(false);\r\n    navigate(`/friend-calendar/${friendId}/${year}-${month}`);\r\n  };\r\n\r\n  const handleLike = (diaryId) => {\r\n    // Ï¢ãÏïÑÏöî Ï≤òÎ¶¨ Î°úÏßÅ\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{selectedYearMonth}</h2>\r\n      <button onClick={() => setCalendarModalShown(!calendarModalShown)} className=\"button-select-year\">Select Year and Month</button>\r\n      {calendarModalShown && (\r\n        <CalendarModal\r\n          onSelect={handleSelectDate}\r\n          onClose={() => setCalendarModalShown(false)}\r\n        />\r\n      )}\r\n      <FriendDiaryList diaries={diaries} onLike={handleLike} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FriendCalendarPage;*/\r\n\r\n// FriendCalendarPage.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom'; // useParams, useNavigate import\r\n// import axios from 'axios'; \r\nimport FriendDiaryList from './FriendDiaryList';\r\nimport CalendarModal from './CalendarModal'; // CalendarModal import\r\n\r\nconst FriendCalendarPage = () => {\r\n  const { friendId } = useParams();\r\n  const [diaries, setDiaries] = useState([]);\r\n  const [selectedYearMonth, setSelectedYearMonth] = useState('2024-02');\r\n  const [calendarModalShown, setCalendarModalShown] = useState(false);\r\n  const [likes, setLikes] = useState({});\r\n  const navigate = useNavigate(); // useNavigate hook\r\n\r\n  useEffect(() => {\r\n    const fetchDiaries = async () => {\r\n      // const response = await axios.get(`/api/diaries/${friendId}/${selectedYearMonth}`);\r\n      // setDiaries(response.data);\r\n      setDiaries([ \r\n        { id: 1, content: 'Diary 1', emoji: 'üòî' },\r\n        { id: 2, content: 'Diary 2', emoji: 'üòî' },\r\n        // ... \r\n      ]);\r\n    };\r\n\r\n    fetchDiaries();\r\n  }, [friendId, selectedYearMonth]);\r\n\r\n  const handleSelectDate = (year, month) => {\r\n    setSelectedYearMonth(`${year}-${month}`);\r\n    setCalendarModalShown(false);\r\n    navigate(`/friend-calendar/${friendId}/${year}-${month}`);\r\n  };\r\n\r\n  const handleLike = (diaryId) => {\r\n    // Ï¢ãÏïÑÏöî ÏÉÅÌÉúÎ•º ÏóÖÎç∞Ïù¥Ìä∏\r\n    setLikes(prev => ({\r\n      ...prev,\r\n      [diaryId]: !prev[diaryId]\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{selectedYearMonth}</h2>\r\n      <button onClick={() => setCalendarModalShown(!calendarModalShown)} className=\"button-select-year\">Select Year and Month</button>\r\n      {calendarModalShown && (\r\n        <CalendarModal\r\n          onSelect={handleSelectDate}\r\n          onClose={() => setCalendarModalShown(false)}\r\n        />\r\n      )}\r\n      <FriendDiaryList diaries={diaries} onLike={handleLike} likes={likes} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FriendCalendarPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}