{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jenny\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\moodify\\\\moodify\\\\prontend\\\\src\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './LoginPage.css';\nimport './index.css';\nimport HomeComponent from './HomeComponent';\nimport { useNavigate } from 'react-router-dom';\nimport BackButton from './BackButton';\nimport { useState } from 'react';\nimport { useUser } from './UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const {\n    login\n  } = useUser();\n  const navigate = useNavigate();\n  const navigateToSignUpPage = () => {\n    navigate('/SignUpPage');\n  };\n  const navigateToResetPage = () => {\n    navigate('/ResetPassword');\n  };\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n  };\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n  const handleNameChange = e => {\n    setName(e.target.value);\n  };\n\n  /*const handleLogin = async () => {\r\n    try {\r\n      // 가상의 사용자 정보\r\n      const fakeUserData = {\r\n        id: 123,\r\n        email: 'test@example.com',\r\n        // ... 기타 사용자 정보 ...\r\n      };\r\n        // 가상의 로그인 성공\r\n      login(fakeUserData);\r\n        // 메인 달력 페이지로 이동\r\n      navigate('/HomeComponent');\r\n    } catch (error) {\r\n      // 로그인 실패 시 처리\r\n      alert(error.message);\r\n    }\r\n  };*/\n\n  const handleLogin = async () => {\n    try {\n      // 서버에 로그인 요청을 보냄\n      const response = await fetch('http://localhost:8080/login-process', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          pw: password\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Invalid email or password');\n      }\n\n      // 서버에서 받아온 사용자 정보\n      const userData = await response.json();\n\n      // 로그인 성공 시 사용자 정보를 설정\n      login(userData);\n\n      // 메인 달력 페이지로 이동\n      navigate('/HomeComponent');\n    } catch (error) {\n      // 로그인 실패 시 처리\n      alert(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BackButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-button-group\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: handleEmailChange,\n        className: \"input-button-group\",\n        placeholder: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-button-group\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: handlePasswordChange,\n        className: \"input-button-group\",\n        placeholder: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"black-button-group\",\n      style: {\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"LOG IN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grey-button-group\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: navigateToSignUpPage,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"smalltext\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: navigateToResetPage,\n        children: \"Forgot password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"rAsgdyVmm/gGnm9mEzwYWDE2TMk=\", false, function () {\n  return [useUser, useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","HomeComponent","useNavigate","BackButton","useState","useUser","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","name","setName","login","navigate","navigateToSignUpPage","navigateToResetPage","handleEmailChange","e","target","value","handlePasswordChange","handleNameChange","handleLogin","response","fetch","method","headers","body","JSON","stringify","pw","ok","Error","userData","json","error","alert","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","style","marginTop","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jenny/OneDrive/바탕 화면/moodify/moodify/prontend/src/LoginPage.js"],"sourcesContent":["import React from 'react';\r\nimport './LoginPage.css';\r\nimport './index.css';\r\nimport HomeComponent from './HomeComponent';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport BackButton from './BackButton';\r\nimport  { useState } from 'react';\r\nimport { useUser } from './UserContext';\r\n\r\n  const LoginPage = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [name, setName] = useState('');\r\n    const { login } = useUser();\r\n    const navigate = useNavigate();\r\n\r\n  const navigateToSignUpPage = () => {\r\n    navigate('/SignUpPage');\r\n  };\r\n\r\n  const navigateToResetPage = () => {\r\n    navigate('/ResetPassword');\r\n  };\r\n\r\n  const handleEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleNameChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n\r\n  /*const handleLogin = async () => {\r\n    try {\r\n      // 가상의 사용자 정보\r\n      const fakeUserData = {\r\n        id: 123,\r\n        email: 'test@example.com',\r\n        // ... 기타 사용자 정보 ...\r\n      };\r\n\r\n      // 가상의 로그인 성공\r\n      login(fakeUserData);\r\n\r\n      // 메인 달력 페이지로 이동\r\n      navigate('/HomeComponent');\r\n    } catch (error) {\r\n      // 로그인 실패 시 처리\r\n      alert(error.message);\r\n    }\r\n  };*/\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      // 서버에 로그인 요청을 보냄\r\n      const response = await fetch('http://localhost:8080/login-process', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, pw: password}),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Invalid email or password');\r\n      }\r\n\r\n      // 서버에서 받아온 사용자 정보\r\n      const userData = await response.json();\r\n\r\n      // 로그인 성공 시 사용자 정보를 설정\r\n      login(userData);\r\n\r\n      // 메인 달력 페이지로 이동\r\n      navigate('/HomeComponent');\r\n    } catch (error) {\r\n      // 로그인 실패 시 처리\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='login'>\r\n      <div className='title'>Log In</div>\r\n      <BackButton></BackButton>\r\n\r\n      <div className='input-button-group'>\r\n        <input\r\n          type='email'\r\n          value={email}\r\n          onChange={handleEmailChange}\r\n          className='input-button-group'\r\n          placeholder='email'\r\n        />\r\n      </div>\r\n\r\n      <div className='input-button-group'>\r\n        <input\r\n          type='password'\r\n          value={password}\r\n          onChange={handlePasswordChange}\r\n          className='input-button-group'\r\n          placeholder='password'\r\n        />\r\n      </div>\r\n\r\n      <div className='black-button-group' style={{ marginTop: '20px' }}>\r\n        <button onClick={handleLogin}>LOG IN</button>\r\n      </div>\r\n\r\n      <div className='grey-button-group'>\r\n        <button onClick={navigateToSignUpPage}>Sign Up</button>\r\n      </div>\r\n\r\n      <div className='smalltext'>\r\n        <p onClick={navigateToResetPage}>Forgot password?</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}