{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jenny\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\moodify\\\\moodify\\\\prontend\\\\src\\\\FriendCalendarPage.js\",\n  _s = $RefreshSig$();\n// FriendCalendarPage.js\n\n/*import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom'; // useParams, useNavigate import\r\nimport axios from 'axios';\r\nimport FriendDiaryList from './FriendDiaryList';\r\nimport CalendarModal from './CalendarModal'; // CalendarModal import\r\n\r\nconst FriendCalendarPage = () => {\r\n  const { friendId } = useParams();\r\n  const [diaries, setDiaries] = useState([]);\r\n  const [selectedYearMonth, setSelectedYearMonth] = useState('2024-02');\r\n  const [calendarModalShown, setCalendarModalShown] = useState(false);\r\n  const navigate = useNavigate(); // useNavigate hook\r\n\r\n  useEffect(() => {\r\n    const fetchDiaries = async () => {\r\n      const response = await axios.get(`/api/diaries/${friendId}/${selectedYearMonth}`);\r\n      setDiaries(response.data);\r\n    };\r\n\r\n    fetchDiaries();\r\n  }, [friendId, selectedYearMonth]);\r\n\r\n  const handleSelectDate = (year, month) => {\r\n    setSelectedYearMonth(`${year}-${month}`);\r\n    setCalendarModalShown(false);\r\n    navigate(`/friend-calendar/${friendId}/${year}-${month}`);\r\n  };\r\n\r\n  const handleLike = (diaryId) => {\r\n    // Ï¢ãÏïÑÏöî Ï≤òÎ¶¨ Î°úÏßÅ\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{selectedYearMonth}</h2>\r\n      <button onClick={() => setCalendarModalShown(!calendarModalShown)} className=\"button-select-year\">Select Year and Month</button>\r\n      {calendarModalShown && (\r\n        <CalendarModal\r\n          onSelect={handleSelectDate}\r\n          onClose={() => setCalendarModalShown(false)}\r\n        />\r\n      )}\r\n      <FriendDiaryList diaries={diaries} onLike={handleLike} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FriendCalendarPage;*/\n\n// FriendCalendarPage.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport CalendarModal from './CalendarModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FriendCalendarPage = () => {\n  _s();\n  const {\n    friendId\n  } = useParams();\n  const [diaries, setDiaries] = useState([]);\n  const [selectedYearMonth, setSelectedYearMonth] = useState('2024-02');\n  const [calendarModalShown, setCalendarModalShown] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchDiaries = async () => {\n      // const response = await axios.get(`/api/diaries/${friendId}/${selectedYearMonth}`);\n      // setDiaries(response.data);\n      setDiaries([{\n        id: 1,\n        content: 'Happy Valentine\\'s Day!',\n        emoji: 'üòä',\n        date: '2024-02-14'\n      }, {\n        id: 2,\n        content: 'Diary 2',\n        emoji: 'üòî',\n        date: '2024-03-03'\n      }\n      // ... \n      ]);\n    };\n    fetchDiaries();\n  }, [friendId, selectedYearMonth]);\n  const handleSelectDate = (year, month) => {\n    setSelectedYearMonth(`${year}-${month}`);\n    setCalendarModalShown(false);\n    navigate(`/friend-calendar/${friendId}/${year}-${month}`);\n  };\n  const handleDiaryClick = diaryId => {\n    navigate(`/friend-diary/${diaryId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: selectedYearMonth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCalendarModalShown(!calendarModalShown),\n      className: \"button-select-year\",\n      children: \"Select Year and Month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), calendarModalShown && /*#__PURE__*/_jsxDEV(CalendarModal, {\n      onSelect: handleSelectDate,\n      onClose: () => setCalendarModalShown(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), diaries.map(diary => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => handleDiaryClick(diary.id),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: diary.emoji\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this)\n    }, diary.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(FriendCalendarPage, \"gE3Igt2DI20YQg9wCP8Mqmx/1sA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = FriendCalendarPage;\nexport default FriendCalendarPage;\nvar _c;\n$RefreshReg$(_c, \"FriendCalendarPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","CalendarModal","jsxDEV","_jsxDEV","FriendCalendarPage","_s","friendId","diaries","setDiaries","selectedYearMonth","setSelectedYearMonth","calendarModalShown","setCalendarModalShown","navigate","fetchDiaries","id","content","emoji","date","handleSelectDate","year","month","handleDiaryClick","diaryId","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","onSelect","onClose","map","diary","_c","$RefreshReg$"],"sources":["C:/Users/jenny/OneDrive/Î∞îÌÉï ÌôîÎ©¥/moodify/moodify/prontend/src/FriendCalendarPage.js"],"sourcesContent":["// FriendCalendarPage.js\r\n\r\n/*import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom'; // useParams, useNavigate import\r\nimport axios from 'axios';\r\nimport FriendDiaryList from './FriendDiaryList';\r\nimport CalendarModal from './CalendarModal'; // CalendarModal import\r\n\r\nconst FriendCalendarPage = () => {\r\n  const { friendId } = useParams();\r\n  const [diaries, setDiaries] = useState([]);\r\n  const [selectedYearMonth, setSelectedYearMonth] = useState('2024-02');\r\n  const [calendarModalShown, setCalendarModalShown] = useState(false);\r\n  const navigate = useNavigate(); // useNavigate hook\r\n\r\n  useEffect(() => {\r\n    const fetchDiaries = async () => {\r\n      const response = await axios.get(`/api/diaries/${friendId}/${selectedYearMonth}`);\r\n      setDiaries(response.data);\r\n    };\r\n\r\n    fetchDiaries();\r\n  }, [friendId, selectedYearMonth]);\r\n\r\n  const handleSelectDate = (year, month) => {\r\n    setSelectedYearMonth(`${year}-${month}`);\r\n    setCalendarModalShown(false);\r\n    navigate(`/friend-calendar/${friendId}/${year}-${month}`);\r\n  };\r\n\r\n  const handleLike = (diaryId) => {\r\n    // Ï¢ãÏïÑÏöî Ï≤òÎ¶¨ Î°úÏßÅ\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{selectedYearMonth}</h2>\r\n      <button onClick={() => setCalendarModalShown(!calendarModalShown)} className=\"button-select-year\">Select Year and Month</button>\r\n      {calendarModalShown && (\r\n        <CalendarModal\r\n          onSelect={handleSelectDate}\r\n          onClose={() => setCalendarModalShown(false)}\r\n        />\r\n      )}\r\n      <FriendDiaryList diaries={diaries} onLike={handleLike} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FriendCalendarPage;*/\r\n\r\n// FriendCalendarPage.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport CalendarModal from './CalendarModal';\r\n\r\nconst FriendCalendarPage = () => {\r\n  const { friendId } = useParams();\r\n  const [diaries, setDiaries] = useState([]);\r\n  const [selectedYearMonth, setSelectedYearMonth] = useState('2024-02');\r\n  const [calendarModalShown, setCalendarModalShown] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchDiaries = async () => {\r\n      // const response = await axios.get(`/api/diaries/${friendId}/${selectedYearMonth}`);\r\n      // setDiaries(response.data);\r\n      setDiaries([ \r\n        { id: 1, content: 'Happy Valentine\\'s Day!', emoji: 'üòä', date: '2024-02-14' },\r\n        { id: 2, content: 'Diary 2', emoji: 'üòî', date: '2024-03-03'},\r\n        // ... \r\n      ]);\r\n    };\r\n\r\n    fetchDiaries();\r\n  }, [friendId, selectedYearMonth]);\r\n\r\n  const handleSelectDate = (year, month) => {\r\n    setSelectedYearMonth(`${year}-${month}`);\r\n    setCalendarModalShown(false);\r\n    navigate(`/friend-calendar/${friendId}/${year}-${month}`);\r\n  };\r\n\r\n  const handleDiaryClick = (diaryId) => {\r\n    navigate(`/friend-diary/${diaryId}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{selectedYearMonth}</h2>\r\n      <button onClick={() => setCalendarModalShown(!calendarModalShown)} className=\"button-select-year\">Select Year and Month</button>\r\n      {calendarModalShown && (\r\n        <CalendarModal\r\n          onSelect={handleSelectDate}\r\n          onClose={() => setCalendarModalShown(false)}\r\n        />\r\n      )}\r\n      {\r\n        diaries.map(diary => (\r\n          <div key={diary.id} onClick={() => handleDiaryClick(diary.id)}>\r\n            <span>{diary.emoji}</span>\r\n          </div>\r\n        ))\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FriendCalendarPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}