{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jenny\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\moodify\\\\moodify\\\\prontend\\\\src\\\\Findfriends.js\",\n  _s = $RefreshSig$();\n/*import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport BackButton from './BackButton';\r\n\r\nconst Findfriends = () => {\r\n  const [friendList, setFriendList] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [searchResult, setSearchResult] = useState([]);\r\n\r\n  // 친구 목록을 초기화하는 함수\r\n  const resetFriendList = () => {\r\n    axios.get('/api/friends')\r\n      .then(response => {\r\n        setFriendList(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  // 컴포넌트가 마운트될 때 친구 목록을 불러옴\r\n  useEffect(() => {\r\n    resetFriendList();\r\n  }, []);\r\n\r\n  // 친구 검색을 처리하는 함수\r\n  const handleSearch = () => {\r\n    axios.get(`/api/friends?search=${searchQuery}`)\r\n      .then(response => {\r\n        setSearchResult(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  // 친구 추가를 처리하는 함수\r\n  const handleAddFriend = (friend) => {\r\n    axios.post('/api/friends', friend)\r\n      .then(response => {\r\n        setFriendList([...friendList, response.data]);\r\n        setSearchResult([]);\r\n        setSearchQuery('');\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className='title'>Friend List</div>\r\n      <BackButton></BackButton>\r\n      <ul>\r\n        {friendList.map(friend => (\r\n          <li key={friend.id}>{friend.name}</li>\r\n        ))}\r\n      </ul>\r\n\r\n      <h2>친구 검색</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={searchQuery}\r\n        onChange={event => setSearchQuery(event.target.value)}\r\n      />\r\n      <button onClick={handleSearch}>검색</button>\r\n\r\n      <h2>검색 결과</h2>\r\n      <ul>\r\n        {searchResult.map(friend => (\r\n          <li key={friend.id}>\r\n            {friend.name}\r\n            <button onClick={() => handleAddFriend(friend)}>추가</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Findfriends;*/\n\nimport React, { useState } from 'react';\nimport BackButton from './BackButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Findfriends = () => {\n  _s();\n  const allUsers = [{\n    id: 1,\n    name: 'John Doe'\n  }, {\n    id: 2,\n    name: 'Jane Doe'\n  }\n  // 필요한 만큼 여기에 더 추가하실 수 있습니다.\n  ];\n  const [friendList, setFriendList] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResult, setSearchResult] = useState([]);\n  const handleSearch = () => {\n    const result = allUsers.filter(user => user.name.toLowerCase().includes(searchQuery.toLowerCase()));\n    setSearchResult(result);\n  };\n  const handleAddFriend = friend => {\n    if (!friendList.find(f => f.id === friend.id)) {\n      setFriendList([...friendList, friend]);\n    }\n    setSearchResult([]);\n    setSearchQuery('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"Friend List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BackButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: friendList.map(friend => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: friend.name\n      }, friend.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC0AC\\uC6A9\\uC790 \\uAC80\\uC0C9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchQuery,\n      onChange: event => setSearchQuery(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"\\uAC80\\uC0C9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uAC80\\uC0C9 \\uACB0\\uACFC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: searchResult.map(friend => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [friend.name, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAddFriend(friend),\n          children: \"\\uCE5C\\uAD6C\\uB85C \\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)]\n      }, friend.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(Findfriends, \"2qtRAmj2wHZAFB996xIwQxOtg7I=\");\n_c = Findfriends;\nexport default Findfriends;\nvar _c;\n$RefreshReg$(_c, \"Findfriends\");","map":{"version":3,"names":["React","useState","BackButton","jsxDEV","_jsxDEV","Findfriends","_s","allUsers","id","name","friendList","setFriendList","searchQuery","setSearchQuery","searchResult","setSearchResult","handleSearch","result","filter","user","toLowerCase","includes","handleAddFriend","friend","find","f","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","type","value","onChange","event","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jenny/OneDrive/바탕 화면/moodify/moodify/prontend/src/Findfriends.js"],"sourcesContent":["/*import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport BackButton from './BackButton';\r\n\r\nconst Findfriends = () => {\r\n  const [friendList, setFriendList] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [searchResult, setSearchResult] = useState([]);\r\n\r\n  // 친구 목록을 초기화하는 함수\r\n  const resetFriendList = () => {\r\n    axios.get('/api/friends')\r\n      .then(response => {\r\n        setFriendList(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  // 컴포넌트가 마운트될 때 친구 목록을 불러옴\r\n  useEffect(() => {\r\n    resetFriendList();\r\n  }, []);\r\n\r\n  // 친구 검색을 처리하는 함수\r\n  const handleSearch = () => {\r\n    axios.get(`/api/friends?search=${searchQuery}`)\r\n      .then(response => {\r\n        setSearchResult(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  // 친구 추가를 처리하는 함수\r\n  const handleAddFriend = (friend) => {\r\n    axios.post('/api/friends', friend)\r\n      .then(response => {\r\n        setFriendList([...friendList, response.data]);\r\n        setSearchResult([]);\r\n        setSearchQuery('');\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className='title'>Friend List</div>\r\n      <BackButton></BackButton>\r\n      <ul>\r\n        {friendList.map(friend => (\r\n          <li key={friend.id}>{friend.name}</li>\r\n        ))}\r\n      </ul>\r\n\r\n      <h2>친구 검색</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={searchQuery}\r\n        onChange={event => setSearchQuery(event.target.value)}\r\n      />\r\n      <button onClick={handleSearch}>검색</button>\r\n\r\n      <h2>검색 결과</h2>\r\n      <ul>\r\n        {searchResult.map(friend => (\r\n          <li key={friend.id}>\r\n            {friend.name}\r\n            <button onClick={() => handleAddFriend(friend)}>추가</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Findfriends;*/\r\n\r\nimport React, { useState } from 'react';\r\nimport BackButton from './BackButton';\r\n\r\nconst Findfriends = () => {\r\n  const allUsers = [\r\n    { id: 1, name: 'John Doe' },\r\n    { id: 2, name: 'Jane Doe' },\r\n    // 필요한 만큼 여기에 더 추가하실 수 있습니다.\r\n  ];\r\n\r\n  const [friendList, setFriendList] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [searchResult, setSearchResult] = useState([]);\r\n\r\n  const handleSearch = () => {\r\n    const result = allUsers.filter(user =>\r\n      user.name.toLowerCase().includes(searchQuery.toLowerCase())\r\n    );\r\n    setSearchResult(result);\r\n  };\r\n\r\n  const handleAddFriend = (friend) => {\r\n    if (!friendList.find(f => f.id === friend.id)) {\r\n      setFriendList([...friendList, friend]);\r\n    }\r\n    setSearchResult([]);\r\n    setSearchQuery('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className='title'>Friend List</div>\r\n      <BackButton></BackButton>\r\n      <ul>\r\n        {friendList.map(friend => (\r\n          <li key={friend.id}>{friend.name}</li>\r\n        ))}\r\n      </ul>\r\n\r\n      <h2>사용자 검색</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={searchQuery}\r\n        onChange={event => setSearchQuery(event.target.value)}\r\n      />\r\n      <button onClick={handleSearch}>검색</button>\r\n\r\n      <h2>검색 결과</h2>\r\n      <ul>\r\n        {searchResult.map(friend => (\r\n          <li key={friend.id}>\r\n            {friend.name}\r\n            <button onClick={() => handleAddFriend(friend)}>친구로 추가</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Findfriends;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}