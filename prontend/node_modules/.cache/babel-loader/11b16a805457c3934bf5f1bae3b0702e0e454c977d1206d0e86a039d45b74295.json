{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jenny\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\moodify\\\\moodify\\\\prontend\\\\src\\\\HomeComponent.js\",\n  _s = $RefreshSig$();\n// HomeComponent.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport CalendarModal from './CalendarModal';\nimport EmojiModal from './EmojiModal';\nimport DiaryModal from './DiaryModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomeComponent = () => {\n  _s();\n  const [calendarModalShown, setCalendarModalShown] = useState(false);\n  const [emojiModalShown, setEmojiModalShown] = useState(false);\n  const [diaryModalShown, setDiaryModalShown] = useState(false);\n  const [selectedEmoji, setSelectedEmoji] = useState('');\n  const [diaryEntries, setDiaryEntries] = useState([]);\n  const [selectedYearMonth, setSelectedYearMonth] = useState('');\n\n  /*useEffect(() => {\r\n  axios.get('api/diaryEntries')\r\n  .then(response => setDiaryEntries(response.data));\r\n  }, []);*/\n\n  useEffect(() => {\n    // 가짜 ��이터\n    const fakeData = [{\n      date: '2024-01-01',\n      emoji: '😊',\n      text: 'Happy New Year!'\n    }, {\n      date: '2024-01-02',\n      emoji: '😍',\n      text: 'I love the start of the year.'\n    }, {\n      date: '2024-02-14',\n      emoji: '❤️',\n      text: 'Happy Valentine\\s Day!'\n    }];\n    setDiaryEntries(fakeData);\n  }, []);\n  const handleAddDiary = (diaryText, selectedDate) => {\n    const newEntry = {\n      date: selectedDate,\n      emoji: selectedEmoji,\n      text: diaryText\n    };\n\n    /*axios.post('/api/diaryEntries', newEntry)\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          setDiaryEntries([\r\n            ...diaryEntries,\r\n            newEntry\r\n          ]);\r\n          setSelectedEmoji('');\r\n          setDiaryModalShown(false);\r\n        }\r\n      });*/\n\n    // 가상의 응답을 생성\n    setDiaryEntries([...diaryEntries, newEntry]);\n    setSelectedEmoji('');\n    setDiaryModalShown(false);\n  };\n  const handleEditDiary = (diaryText, selectedDate, index) => {\n    const editedEntry = {\n      date: selectedDate,\n      emoji: selectedEmoji,\n      text: diaryText\n    };\n    axios.put(`api/diaryEntries/${index}`, editedEntry).then(response => {\n      if (response.status === 200) {\n        const newDiaryEntries = [...diaryEntries];\n        newDiaryEntries[index] = editedEntry;\n        setDiaryEntries(newDiaryEntries);\n      }\n    });\n  };\n  const handleDeleteDiary = index => {\n    axios.delete(`api/diaryEntries/${index}`).then(response => {\n      if (response.status === 200) {\n        const newDiaryEntries = [...diaryEntries];\n        newDiaryEntries.splice(index, 1);\n        setDiaryEntries(newDiaryEntries);\n      }\n    });\n  };\n  const handleSelectEmoji = emoji => {\n    setSelectedEmoji(emoji);\n    setEmojiModalShown(false);\n    setDiaryModalShown(true);\n  };\n  const handleSelectDate = yearMonth => {\n    setSelectedYearMonth(yearMonth);\n    setCalendarModalShown(false);\n  };\n  const handleOpenEmojiModal = () => {\n    setEmojiModalShown(!emojiModalShown);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCalendarModalShown(true),\n      children: \"Select Year and Month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOpenEmojiModal,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 1\n    }, this), calendarModalShown && /*#__PURE__*/_jsxDEV(CalendarModal, {\n      onSelect: handleSelectDate,\n      onClose: () => setCalendarModalShown(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }, this), emojiModalShown && /*#__PURE__*/_jsxDEV(EmojiModal, {\n      onSelect: handleSelectEmoji,\n      onClose: () => setEmojiModalShown(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }, this), diaryModalShown && /*#__PURE__*/_jsxDEV(DiaryModal, {\n      onAdd: handleAddDiary,\n      onEdit: handleEditDiary,\n      onDelete: handleDeleteDiary,\n      onClose: () => setDiaryModalShown(false),\n      selectedEmoji: selectedEmoji\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: diaryEntries.filter(entry => entry.date.startsWith(selectedYearMonth)).map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [entry.date, \" - \", entry.emoji, \" - \", entry.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 1\n  }, this);\n};\n_s(HomeComponent, \"4CIqWIIIvWGs3hB53ElnSYOAHQU=\");\n_c = HomeComponent;\nexport default HomeComponent;\n\n// HomeComponent.js\n\n/*import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport CalendarModal from './CalendarModal';\r\nimport EmojiModal from './EmojiModal';\r\nimport DiaryModal from './DiaryModal';\r\n\r\nconst HomeComponent = () => {\r\n  const [calendarModalShown, setCalendarModalShown] = useState(false);\r\n  const [emojiModalShown, setEmojiModalShown] = useState(false);\r\n  const [diaryModalShown, setDiaryModalShown] = useState(false);\r\n  const [selectedEmoji, setSelectedEmoji] = useState('');\r\n  const [diaryEntries, setDiaryEntries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get('/api/diaryEntries')\r\n      .then(response => setDiaryEntries(response.data));\r\n  }, []);\r\n\r\n  const handleAddDiary = (diaryText, selectedDate) => {\r\n    const newEntry = { date: selectedDate, emoji: selectedEmoji, text: diaryText };\r\n    axios.post('/api/diaryEntries', newEntry)\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          setDiaryEntries([\r\n            ...diaryEntries,\r\n            newEntry\r\n          ]);\r\n          setSelectedEmoji('');\r\n          setDiaryModalShown(false);\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleEditDiary = (diaryText, selectedDate, index) => {\r\n    const editedEntry = { date: selectedDate, emoji: selectedEmoji, text: diaryText };\r\n    axios.put(`/api/diaryEntries/${index}`, editedEntry)\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          const newDiaryEntries = [...diaryEntries];\r\n          newDiaryEntries[index] = editedEntry;\r\n          setDiaryEntries(newDiaryEntries);\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleDeleteDiary = (index) => {\r\n    axios.delete(`/api/diaryEntries/${index}`)\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          const newDiaryEntries = [...diaryEntries];\r\n          newDiaryEntries.splice(index, 1);\r\n          setDiaryEntries(newDiaryEntries);\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleSelectEmoji = (emoji) => {\r\n    setSelectedEmoji(emoji);\r\n    setEmojiModalShown(false);\r\n    setDiaryModalShown(true);\r\n  };\r\n\r\n  const handleSelectDate = (date) => {\r\n    setCalendarModalShown(false);\r\n  };\r\n\r\n  const handleOpenEmojiModal = () => {\r\n    setEmojiModalShown(!emojiModalShown);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => setCalendarModalShown(true)}>Select Year and Month</button>\r\n      <button onClick={handleOpenEmojiModal}>+</button>\r\n\r\n      {calendarModalShown && (\r\n        <CalendarModal\r\n          onSelect={handleSelectDate}\r\n          onClose={() => setCalendarModalShown(false)}\r\n        />\r\n      )}\r\n\r\n      {emojiModalShown && (\r\n        <EmojiModal\r\n          onSelect={handleSelectEmoji}\r\n          onClose={() => setEmojiModalShown(false)}\r\n        />\r\n      )}\r\n\r\n      {diaryModalShown && (\r\n        <DiaryModal\r\n          onAdd={handleAddDiary}\r\n          onEdit={handleEditDiary}\r\n          onDelete={handleDeleteDiary}\r\n          onClose={() => setDiaryModalShown(false)}\r\n          selectedEmoji={selectedEmoji}\r\n        />\r\n      )}\r\n\r\n      <ul>\r\n        {diaryEntries.map((entry, index) => (\r\n          <li key={index}>\r\n            {entry.date} - {entry.emoji} - {entry.text}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n*/\n\n/*import React, { useState, useEffect } from 'react';\r\nimport CalendarModal from './CalendarModal';\r\nimport EmojiModal from './EmojiModal';\r\nimport DiaryModal from './DiaryModal';\r\n\r\nconst HomeComponent = () => {\r\n  const [calendarModalShown, setCalendarModalShown] = useState(false);\r\n  const [emojiModalShown, setEmojiModalShown] = useState(false);\r\n  const [diaryModalShown, setDiaryModalShown] = useState(false);\r\n  const [selectedEmoji, setSelectedEmoji] = useState('');\r\n  const [diaryEntries, setDiaryEntries] = useState(\r\n    JSON.parse(localStorage.getItem('diaryEntries')) || []\r\n  );\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('diaryEntries', JSON.stringify(diaryEntries));\r\n  }, [diaryEntries]);\r\n\r\n  const handleAddDiary = (diaryText, selectedDate) => {\r\n    setDiaryEntries([\r\n      ...diaryEntries,\r\n      { date: selectedDate, emoji: selectedEmoji, text: diaryText }\r\n    ]);\r\n    setSelectedEmoji('');\r\n    setDiaryModalShown(false);\r\n  };\r\n\r\n  const handleSelectEmoji = (emoji) => {\r\n    setSelectedEmoji(emoji);\r\n    setEmojiModalShown(false);\r\n    setDiaryModalShown(true);\r\n  };\r\n\r\n  const handleSelectDate = (date) => {\r\n    setCalendarModalShown(false);\r\n  };\r\n\r\n  const handleOpenEmojiModal = () => {\r\n    setEmojiModalShown(!emojiModalShown);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => setCalendarModalShown(true)}>Select Year and Month</button>\r\n      <button onClick={handleOpenEmojiModal}>+</button>\r\n\r\n      {calendarModalShown && (\r\n        <CalendarModal\r\n          onSelect={handleSelectDate}\r\n          onClose={() => setCalendarModalShown(false)}\r\n        />\r\n      )}\r\n\r\n      {emojiModalShown && (\r\n        <EmojiModal\r\n          onSelect={handleSelectEmoji}\r\n          onClose={() => setEmojiModalShown(false)}\r\n        />\r\n      )}\r\n\r\n      {diaryModalShown && (\r\n        <DiaryModal\r\n          onAdd={handleAddDiary}\r\n          onClose={() => setDiaryModalShown(false)}\r\n          selectedEmoji={selectedEmoji}\r\n        />\r\n      )}\r\n\r\n      /* 일기 목록 렌더링 */\n/*<ul>\r\n  {diaryEntries.map((entry, index) => (\r\n    <li key={index}>\r\n      {entry.date} - {entry.emoji} - {entry.text}\r\n    </li>\r\n  ))}\r\n</ul>\r\n</div>\r\n);\r\n};\r\nexport default HomeComponent;*/\nvar _c;\n$RefreshReg$(_c, \"HomeComponent\");","map":{"version":3,"names":["React","useState","useEffect","axios","CalendarModal","EmojiModal","DiaryModal","jsxDEV","_jsxDEV","HomeComponent","_s","calendarModalShown","setCalendarModalShown","emojiModalShown","setEmojiModalShown","diaryModalShown","setDiaryModalShown","selectedEmoji","setSelectedEmoji","diaryEntries","setDiaryEntries","selectedYearMonth","setSelectedYearMonth","fakeData","date","emoji","text","handleAddDiary","diaryText","selectedDate","newEntry","handleEditDiary","index","editedEntry","put","then","response","status","newDiaryEntries","handleDeleteDiary","delete","splice","handleSelectEmoji","handleSelectDate","yearMonth","handleOpenEmojiModal","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSelect","onClose","onAdd","onEdit","onDelete","filter","entry","startsWith","map","_c","$RefreshReg$"],"sources":["C:/Users/jenny/OneDrive/바탕 화면/moodify/moodify/prontend/src/HomeComponent.js"],"sourcesContent":["// HomeComponent.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport CalendarModal from './CalendarModal';\r\nimport EmojiModal from './EmojiModal';\r\nimport DiaryModal from './DiaryModal';\r\n\r\nconst HomeComponent = () => {\r\nconst [calendarModalShown, setCalendarModalShown] = useState(false);\r\nconst [emojiModalShown, setEmojiModalShown] = useState(false);\r\nconst [diaryModalShown, setDiaryModalShown] = useState(false);\r\nconst [selectedEmoji, setSelectedEmoji] = useState('');\r\nconst [diaryEntries, setDiaryEntries] = useState([]);\r\nconst [selectedYearMonth, setSelectedYearMonth] = useState('');\r\n\r\n/*useEffect(() => {\r\naxios.get('api/diaryEntries')\r\n.then(response => setDiaryEntries(response.data));\r\n}, []);*/\r\n\r\nuseEffect(() => {\r\n// 가짜 ��이터\r\nconst fakeData = [\r\n{ date: '2024-01-01', emoji: '😊', text: 'Happy New Year!' },\r\n{ date: '2024-01-02', emoji: '😍', text: 'I love the start of the year.' },\r\n{ date: '2024-02-14', emoji: '❤️', text: 'Happy Valentine\\s Day!' },\r\n];\r\nsetDiaryEntries(fakeData);\r\n}, []);\r\n\r\nconst handleAddDiary = (diaryText, selectedDate) => {\r\n  const newEntry = { date: selectedDate, emoji: selectedEmoji, text: diaryText };\r\n  \r\n  /*axios.post('/api/diaryEntries', newEntry)\r\n    .then(response => {\r\n      if (response.status === 200) {\r\n        setDiaryEntries([\r\n          ...diaryEntries,\r\n          newEntry\r\n        ]);\r\n        setSelectedEmoji('');\r\n        setDiaryModalShown(false);\r\n      }\r\n    });*/\r\n  \r\n  // 가상의 응답을 생성\r\n  setDiaryEntries([\r\n    ...diaryEntries,\r\n    newEntry\r\n  ]);\r\n  setSelectedEmoji('');\r\n  setDiaryModalShown(false);\r\n};\r\n\r\nconst handleEditDiary = (diaryText, selectedDate, index) => {\r\nconst editedEntry = { date: selectedDate, emoji: selectedEmoji, text: diaryText };\r\naxios.put(`api/diaryEntries/${index}`, editedEntry)\r\n.then(response => {\r\nif (response.status === 200) {\r\nconst newDiaryEntries = [...diaryEntries];\r\nnewDiaryEntries[index] = editedEntry;\r\nsetDiaryEntries(newDiaryEntries);\r\n}\r\n});\r\n};\r\n\r\nconst handleDeleteDiary = (index) => {\r\naxios.delete(`api/diaryEntries/${index}`)\r\n.then(response => {\r\nif (response.status === 200) {\r\nconst newDiaryEntries = [...diaryEntries];\r\nnewDiaryEntries.splice(index, 1);\r\nsetDiaryEntries(newDiaryEntries);\r\n}\r\n});\r\n};\r\n\r\nconst handleSelectEmoji = (emoji) => {\r\nsetSelectedEmoji(emoji);\r\nsetEmojiModalShown(false);\r\nsetDiaryModalShown(true);\r\n};\r\n\r\nconst handleSelectDate = (yearMonth) => {\r\nsetSelectedYearMonth(yearMonth);\r\nsetCalendarModalShown(false);\r\n};\r\n\r\nconst handleOpenEmojiModal = () => {\r\nsetEmojiModalShown(!emojiModalShown);\r\n};\r\n\r\nreturn (\r\n<div>\r\n<button onClick={() => setCalendarModalShown(true)}>Select Year and Month</button>\r\n<button onClick={handleOpenEmojiModal}>+</button>\r\n\r\n  {calendarModalShown && (\r\n    <CalendarModal\r\n      onSelect={handleSelectDate}\r\n      onClose={() => setCalendarModalShown(false)}\r\n    />\r\n  )}\r\n\r\n  {emojiModalShown && (\r\n    <EmojiModal\r\n      onSelect={handleSelectEmoji}\r\n      onClose={() => setEmojiModalShown(false)}\r\n    />\r\n  )}\r\n\r\n  {diaryModalShown && (\r\n    <DiaryModal\r\n      onAdd={handleAddDiary}\r\n      onEdit={handleEditDiary}\r\n      onDelete={handleDeleteDiary}\r\n      onClose={() => setDiaryModalShown(false)}\r\n      selectedEmoji={selectedEmoji}\r\n    />\r\n  )}\r\n\r\n  <ul>\r\n    {diaryEntries.filter(entry => entry.date.startsWith(selectedYearMonth)).map((entry, index) => (\r\n      <li key={index}>\r\n        {entry.date} - {entry.emoji} - {entry.text}\r\n      </li>\r\n    ))}\r\n  </ul>\r\n</div>\r\n);\r\n};\r\n\r\nexport default HomeComponent;\r\n\r\n\r\n\r\n\r\n// HomeComponent.js\r\n\r\n/*import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport CalendarModal from './CalendarModal';\r\nimport EmojiModal from './EmojiModal';\r\nimport DiaryModal from './DiaryModal';\r\n\r\nconst HomeComponent = () => {\r\n  const [calendarModalShown, setCalendarModalShown] = useState(false);\r\n  const [emojiModalShown, setEmojiModalShown] = useState(false);\r\n  const [diaryModalShown, setDiaryModalShown] = useState(false);\r\n  const [selectedEmoji, setSelectedEmoji] = useState('');\r\n  const [diaryEntries, setDiaryEntries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get('/api/diaryEntries')\r\n      .then(response => setDiaryEntries(response.data));\r\n  }, []);\r\n\r\n  const handleAddDiary = (diaryText, selectedDate) => {\r\n    const newEntry = { date: selectedDate, emoji: selectedEmoji, text: diaryText };\r\n    axios.post('/api/diaryEntries', newEntry)\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          setDiaryEntries([\r\n            ...diaryEntries,\r\n            newEntry\r\n          ]);\r\n          setSelectedEmoji('');\r\n          setDiaryModalShown(false);\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleEditDiary = (diaryText, selectedDate, index) => {\r\n    const editedEntry = { date: selectedDate, emoji: selectedEmoji, text: diaryText };\r\n    axios.put(`/api/diaryEntries/${index}`, editedEntry)\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          const newDiaryEntries = [...diaryEntries];\r\n          newDiaryEntries[index] = editedEntry;\r\n          setDiaryEntries(newDiaryEntries);\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleDeleteDiary = (index) => {\r\n    axios.delete(`/api/diaryEntries/${index}`)\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          const newDiaryEntries = [...diaryEntries];\r\n          newDiaryEntries.splice(index, 1);\r\n          setDiaryEntries(newDiaryEntries);\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleSelectEmoji = (emoji) => {\r\n    setSelectedEmoji(emoji);\r\n    setEmojiModalShown(false);\r\n    setDiaryModalShown(true);\r\n  };\r\n\r\n  const handleSelectDate = (date) => {\r\n    setCalendarModalShown(false);\r\n  };\r\n\r\n  const handleOpenEmojiModal = () => {\r\n    setEmojiModalShown(!emojiModalShown);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => setCalendarModalShown(true)}>Select Year and Month</button>\r\n      <button onClick={handleOpenEmojiModal}>+</button>\r\n\r\n      {calendarModalShown && (\r\n        <CalendarModal\r\n          onSelect={handleSelectDate}\r\n          onClose={() => setCalendarModalShown(false)}\r\n        />\r\n      )}\r\n\r\n      {emojiModalShown && (\r\n        <EmojiModal\r\n          onSelect={handleSelectEmoji}\r\n          onClose={() => setEmojiModalShown(false)}\r\n        />\r\n      )}\r\n\r\n      {diaryModalShown && (\r\n        <DiaryModal\r\n          onAdd={handleAddDiary}\r\n          onEdit={handleEditDiary}\r\n          onDelete={handleDeleteDiary}\r\n          onClose={() => setDiaryModalShown(false)}\r\n          selectedEmoji={selectedEmoji}\r\n        />\r\n      )}\r\n\r\n      <ul>\r\n        {diaryEntries.map((entry, index) => (\r\n          <li key={index}>\r\n            {entry.date} - {entry.emoji} - {entry.text}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n*/\r\n\r\n\r\n/*import React, { useState, useEffect } from 'react';\r\nimport CalendarModal from './CalendarModal';\r\nimport EmojiModal from './EmojiModal';\r\nimport DiaryModal from './DiaryModal';\r\n\r\nconst HomeComponent = () => {\r\n  const [calendarModalShown, setCalendarModalShown] = useState(false);\r\n  const [emojiModalShown, setEmojiModalShown] = useState(false);\r\n  const [diaryModalShown, setDiaryModalShown] = useState(false);\r\n  const [selectedEmoji, setSelectedEmoji] = useState('');\r\n  const [diaryEntries, setDiaryEntries] = useState(\r\n    JSON.parse(localStorage.getItem('diaryEntries')) || []\r\n  );\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('diaryEntries', JSON.stringify(diaryEntries));\r\n  }, [diaryEntries]);\r\n\r\n  const handleAddDiary = (diaryText, selectedDate) => {\r\n    setDiaryEntries([\r\n      ...diaryEntries,\r\n      { date: selectedDate, emoji: selectedEmoji, text: diaryText }\r\n    ]);\r\n    setSelectedEmoji('');\r\n    setDiaryModalShown(false);\r\n  };\r\n\r\n  const handleSelectEmoji = (emoji) => {\r\n    setSelectedEmoji(emoji);\r\n    setEmojiModalShown(false);\r\n    setDiaryModalShown(true);\r\n  };\r\n\r\n  const handleSelectDate = (date) => {\r\n    setCalendarModalShown(false);\r\n  };\r\n\r\n  const handleOpenEmojiModal = () => {\r\n    setEmojiModalShown(!emojiModalShown);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => setCalendarModalShown(true)}>Select Year and Month</button>\r\n      <button onClick={handleOpenEmojiModal}>+</button>\r\n\r\n      {calendarModalShown && (\r\n        <CalendarModal\r\n          onSelect={handleSelectDate}\r\n          onClose={() => setCalendarModalShown(false)}\r\n        />\r\n      )}\r\n\r\n      {emojiModalShown && (\r\n        <EmojiModal\r\n          onSelect={handleSelectEmoji}\r\n          onClose={() => setEmojiModalShown(false)}\r\n        />\r\n      )}\r\n\r\n      {diaryModalShown && (\r\n        <DiaryModal\r\n          onAdd={handleAddDiary}\r\n          onClose={() => setDiaryModalShown(false)}\r\n          selectedEmoji={selectedEmoji}\r\n        />\r\n      )}\r\n\r\n      /* 일기 목록 렌더링 */\r\n      /*<ul>\r\n        {diaryEntries.map((entry, index) => (\r\n          <li key={index}>\r\n            {entry.date} - {entry.emoji} - {entry.text}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeComponent;*/\r\n"],"mappings":"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AC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEN,CAAC;AAACzC,EAAA,CA3HID,aAAa;AAAAoD,EAAA,GAAbpD,aAAa;AA6HnB,eAAeA,aAAa;;AAK5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVM,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}